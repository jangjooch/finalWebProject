<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- 멤버리스트 -->
	<select id="memberList" parameterType="map"
		resultType="web.dto.member.MemberDto">
		select rn, m_num, m_name, m_id, m_phone, po_num,po_position 
		from (
		select rownum as rn, m_num, m_name, m_id, m_phone, po_num,po_position 
		from (
		select m_num, m_name, m_id, m_phone, p.po_num ,po_position 
		from member ,position p
			WHERE member.po_num = p.po_num
		order by m_num desc
		)
		where rownum &lt;= #{endRowNo}
		)
		where rn &gt;= #{startRowNo}
	</select>

	<select id="selectTotalRowNum" resultType="int">
		SELECT COUNT(*) FROM
		member
	</select>

	<!-- 멤버 디테일 -->
	<select id="memberSelectOne" parameterType="int"
		resultType="web.dto.member.MemberDto">
		SELECT * FROM MEMBER m, position p
		WHERE m.po_num = p.po_num
		and m.m_num = #{m_num}
	</select>

	<!-- 멤버 수정 -->
	<update id="memberUpdate"
		parameterType="web.dto.member.MemberDto">
		UPDATE member SET 
		m_name=#{m_name}, m_id=#{m_id}, m_pw=#{m_pw}, m_phone=#{m_phone}, po_num=#{po_num}
		WHERE m_num = #{m_num}
	</update>

	<!-- 멤버 등록 -->
	<insert id="memberInsert"
		parameterType="web.dto.member.MemberDto">
		INSERT INTO member
		VALUES(MEMBER_SEQ.nextval ,#{m_name} ,#{m_id},#{m_pw} ,#{m_phone} ,#{po_num})
	</insert>


	<!-- 멤버 삭제 -->
	<delete id="memberDelte" parameterType="int">
		DELETE FROM member WHERE m_num = #{m_num}
	</delete>

	<select id="selectMemberByMid" parameterType="string"
		resultType="web.dto.member.MemberDto">
		SELECT *
		FROM member
		WHERE m_id=#{m_id}
	</select>

	<!-- 멤버 디테일 -->
	<select id="selectMember" parameterType="int" resultType="web.dto.member.MemberDto">
		SELECT * FROM member m, position p WHERE m_num = #{m_num} AND m.po_num = p.po_num
	</select>
	
	<!-- 회원 사건리스트 -->
	<select id="memberReport" parameterType="int" resultType="web.dto.request.RequestDto">
		select rn, re_num, re_time, re_location_x,re_location_y,  re_success
		from (
            select rownum as rn, re_num, re_time, re_location_x,re_location_y,  re_success
            from (
                    SELECT re_num, re_time, re_location_x,re_location_y,  re_success
                    FROM request 
                	WHERE m_num = #{m_num}
                    ORDER BY re_time DESC
            )
        where rownum &lt;= #{endRowNo}
		)
		where rn &gt;= #{startRowNo}
	</select>
	<!-- 
	<resultMap type="web.dto.mission.MissionDto" id="reportList">
			<result property="re_num" column="re_num"/>
			<result property="re_time" column="re_time"/>
			<result property="re_location_x" column="re_location_x"/>
			<result property="re_location_y" column="re_location_y"/>
			<result property="re_success" column="re_success"/>
	</resultMap>
	 -->
	




	<select id="searchMemberList1" parameterType="map" resultType="web.dto.member.MemberDto">
        select rn, m_num, m_name, m_id, m_phone, po_num,  po_position 
		from (
            select rownum as rn, m_num, m_name, m_id, m_phone, po_num , po_position 
            from (
                select m_num, m_name, m_id, m_phone, p.po_num, po_position 
                from member , position p
                where member.po_num = p.po_num
                    AND m_num = #{things}
                order by m_num desc
            ) 
		where rownum &lt;= #{endRowNo}
		)
		where rn &gt;= #{startRowNo}
	</select>

	<!-- 회원번호를 제외한 검색 -->
	<select id="searchMemberList2" parameterType="map" resultType="web.dto.member.MemberDto">
        select rn, m_num, m_name, m_id, m_phone, po_num,  po_position 
		from (
            select rownum as rn, m_num, m_name, m_id, m_phone, po_num , po_position 
            from (
                select m_num, m_name, m_id, m_phone, p.po_num, po_position 
                from member , position p
                where member.po_num = p.po_num
                    AND m_name like '%'||#{things}||'%'
                order by m_num desc
            ) 
		where rownum &lt;= #{endRowNo}
		)
		where rn &gt;= #{startRowNo}
	</select>
	<select id="searchMemberList3" parameterType="map" resultType="web.dto.member.MemberDto">
		SELECT 	m.m_num, m.m_name, m.m_id, m.m_pw, m.m_phone, m.po_num, p.po_position 
		FROM 	member m , position p
		WHERE 
				m.po_num = p.po_num 
				AND m_phone like '%'||#{things}||'%'
	</select>
	<select id="searchMemberList4" parameterType="map" resultType="web.dto.member.MemberDto">
		SELECT 	m.m_num, m.m_name, m.m_id, m.m_pw, m.m_phone, m.po_num, p.po_position 
		FROM 	member m , position p
		WHERE 
				m.po_num = p.po_num 
				AND p.po_position like '%'||#{things}||'%'
	</select> <!-- c:if 로 가능 -->
	
	<select id="selectSearchTotalRowNo1" parameterType="string" resultType="int">
                select count(*)
                from member , position p
                where member.po_num = p.po_num
                    AND m_num = #{things}
	</select>
	<select id="selectSearchTotalRowNo2" parameterType="string" resultType="int">
                select count(*)
                from member , position p
                where member.po_num = p.po_num
                    AND m_name like '%'||#{things}||'%'
	</select>
	<select id="selectSearchTotalRowNo3" parameterType="string" resultType="int">
                select count(*)
                from member , position p
                where member.po_num = p.po_num
                    AND m_phone like '%'||#{things}||'%'
	</select>
	<select id="selectSearchTotalRowNo4" parameterType="string" resultType="int">
                select count(*)
                from member , position p
                where member.po_num = p.po_num
                    AND po_num like '%'||#{things}||'%'
	</select>
</mapper>